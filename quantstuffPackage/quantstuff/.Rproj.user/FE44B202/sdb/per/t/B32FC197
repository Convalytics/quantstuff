{
    "contents" : "#install.packages(\"PerformanceAnalytics\")\nlibrary(quantmod)\nlibrary(PerformanceAnalytics)\nsetwd(\"~/GitHub/quantstuff\")\n######################################################\nbbandScanner <- function(a){\n   \n   mySymbol <- toupper(a)\n   \n   myStock <- eval(parse(text=mySymbol))\n   \n   bands <- BBands(Cl(myStock))$pctB\n   bands$rsi <- RSI(Ad(myStock))\n   bands$Close <- Ad(myStock)\n   bands <- tail(bands, n=1)\n   bands$signal <- NA\n   bands$signal <- ifelse(bands$pctB > 1, \"Sell\",\n               ifelse(bands$pctB < 0,\"Buy\",\n                 \"-\"))\n      \n   return(bands)\n\n   \n   }\n   ########################################################\n\n#### bbscan function ###############################################\nbbscan <- function(stocks){\n#stocklist<-c(\"XLK\",\"AAPL\",\"GOOG\",\"MSFT\",\"VZ\",\"IBM\",\"T\",\"ORCL\",\"QCOM\",\"CSCO\",\"INTC\",\"V\",\"FB\",\"MA\",\"EBAY\",\"EMC\",\"TXN\",\"ACN\",\"HPQ\",\"ADP\",\"YHOO\",\"CRM\")\n##getSymbols(stocklist,src=\"yahoo\")\n\nsignalList <- as.data.frame(matrix(NA,nrow=0,ncol=5))\nnames(signalList) <- c(\"stock\",\"Close\",\"rsi\",\"pctB\",\"signal\")\n\nstocks <- \"AAPL\"\nfor(i in 1:length(stocks)){\ntestgrab <- bbandScanner(stocks[i])\nsignalList[i,\"stock\"] <- stocks[i]\nsignalList[i,\"Close\"] <- testgrab$Close\nsignalList[i,\"rsi\"]<- testgrab$rsi\nsignalList[i,\"pctB\"]<- testgrab$pctB\nsignalList[i,\"signal\"] <- testgrab$signal\n\n\n}\n}\n#############################################################################\n#############################################################################\n\nchartStock <- function(a,b){\n   mySymbol <- toupper(a)\n   dayRange <- as.numeric(b)\n   \n   # If the quote object doesn't exist. Get it from Yahoo.\n   # If it already exists, this code will be skipped.\n   if(exists(mySymbol)==F) {\n      getSymbols(mySymbol,src=\"yahoo\")\n   }\n   \n   #    todayQuote <- getQuote(mySymbol, what=yahooQuote.EOD)\n   myStock <- eval(parse(text=mySymbol))\n   \n   chartSeries(last(myStock,dayRange),\n               type=\"candlesticks\",\n               name=paste0(mySymbol, \" - Past \", dayRange, \" Days\"),\n               theme=chartTheme(\"white\"),\n               up.col=\"white\",\n               dn.col=\"black\"     \n   )\n   \n#    addTA(BBands(Cl(myStock))$pctB)\n#    addTA(BBands(Cl(myStock)),on=-1)\n#    addGuppy()\n    addBBands()\n#    addMACD()\n   #####  todayQuote\n}\n######################################################################\n#Guppy Multiple Moving Average\nGMMA <- function(x) {\n   fastMA <- c(3,5,8,10,12,15)\n   slowMA <- c(30,35,40,45,50,60)\n   x <- sapply(c(fastMA,slowMA),\n               function(xx)EMA(x,xx))\n   return(x)   \n}\n################################################\n\naddGuppy <- newTA(FUN=GMMA,\n                  preFUN=Cl,\n                  col=c(rep(3,6),\n                        rep(\"#333333\",6)),\n                  legend=\"GMMA\")\n\n\n\n#???  attachSymbols()\n\n######################################################################\n######################################################################\n### End Functions\n######################################################################\n######################################################################\n\n\n\n\n### Goog split causing issues???\ntech<-c(\"XLK\",\"AAPL\",\"MSFT\",\"VZ\",\"IBM\",\"ORCL\",\"QCOM\",\"CSCO\",\"INTC\",\"V\",\"FB\",\n             \"MA\",\"EBAY\",\"EMC\",\"TXN\",\"ACN\",\"HPQ\",\"ADP\",\"YHOO\",\"CRM\",\n             \"CTSH\",\"ADBE\",\"GLW\",\"AMAT\",\"MU\",\"TEL\",\"INTU\",\"CTL\",\"SNDK\",\"WDC\",\"STX\",\"ADI\",\"BRCM\",\n             \"FIX\",\"APH\",\"XLNX\",\"FISV\",\"NTAP\",\"KLAC\",\"ALTR\",\"ADSK\",\"LLTC\",\"AKAM\",\"CTXS\",\n             \"RHT\",\"CA\",\"NVDA\",\"MCHP\",\"EA\",\"CSC\",\"WU\",\"LRCX\",\"HRS\",\"TDC\",\"FFIV\",\"VRSN\",\"FTR\",\"FLIR\",\"TSS\",\"WIN\",\"FSLR\",\"JBL\"                      \n             )\n\nkeyMarkets_US <- c(\"IWC\",\"SLY\",\"SPY\",\"DIA\")   # EMM\nkeyMarkets_Global <- c(\"ACWI\",\"EFA\",\"CWI\",\"GMM\",\"BIK\")\nkeyMarkets_Bonds <- c(\"BWX\",\"JNK\",\"LAG\",\"IPE\",\"TLT\")\nkeyMarkets_Commodities <- c(\"OIL\",\"JJA\",\"PTM\",\"JJM\",\"GLD\",\"SLV\",\"GAZ\",\"PALL\",\"PPLT\")\nkeyMarkets_Currencies <- c(\"UUP\",\"FXE\",\"FXB\",\"CYB\",\"FXY\")\nagriculture <- c(\"JO\",\"NIB\",\"COW\",\"FUE\",\"BAL\",\"JJG\",\"SGG\",\"CORN\",\"JJA\")\nmetals <- c(\"JJT\",\"JJN\",\"LD\",\"JJU\",\"JJC\",\"GLD\",\"SLV\",\"PALL\",\"PPLT\",\"JJM\",\"WITE\")\ncountries <- c(\"EWI\",\"EGPT\",\"EWP\",\"EIRL\",\"EWG\",\"EWQ\",\"EWN\",\"EWK\",\"EIS\",\"EWL\",\"ARGT\",\"PLND\",\"EWU\",\"EWO\",\"EWY\",\"EWT\")    #TMW\ncurrencies <- c(\"FXB\",\"FXF\",\"FXE\",\"UUP\",\"FXS\",\"CYB\",\"ICN\",\"FXY\",\"FXC\",\"FXA\",\"BZF\")   #, SZR\nsectors_US <- c(\"XLI\",\"XLV\",\"XLB\",\"XLY\",\"XLK\",\"XLF\",\"XLE\",\"XLP\",\"XLU\")\nleveragedETFs <- c(\"TNA\",\"SSO\",\"UPRO\",\"FAS\",\"QLD\",\"ERX\",\"UWM\",\"AGQ\",\"DDM\",\"UST\",\"VIX\")\n\nstocklist <- c(keyMarkets_US,\n               tech,\n               keyMarkets_Global,\n               keyMarkets_Bonds,\n               keyMarkets_Commodities,\n               keyMarkets_Currencies,\n               agriculture,\n               metals,\n               countries,\n               currencies,\n               sectors_US,\n               leveragedETFs)\n\nstocklist <- stocklist[!duplicated(stocklist)]  # remove duplicates\n\n#stocklist<-c(\"FB\",\"AUY\",\"XLK\")\n# Use the quantmod function to get all of the stock data properly.\ngetSymbols(stocklist,src=\"yahoo\", warnings = FALSE)\n\n\n# Scan for buy/sell signals based on Bollinger Bands\nscanned <- bbscan(\"OIL\")\nsubset(scanned, signal!=\"-\")\n\n# Chart to see what's going on.\nchartStock(\"AUY\",60)\naddATR()\naddGuppy()\naddRSI()\naddMACD()\naddADX()\n\n#plot(Return.calculate(last(AUY$AUY.Close,180),method=\"compound\"))\n\n\n# chart.CumReturns(managers[,c(manager.column, index.columns, \n#                              peer.columns), drop = FALSE], main = 'Cumulative Returns', \n#                  legend.loc = 'topleft', event.lines = risk.dates, event.labels = \n#                     risk.labels, ylog = TRUE, wealth.index = TRUE, colorset = colorset, \n#                  lwd = 2)\n# # \n# # #????? getOptionChain(\"AAPL\")\n# # #????? buildData(BBands(Cl(XLK)))\n# \n# \n# \n# #candleChart(AUY,subset=\"2014\", theme=\"white\");addGuppy()\n# #addGuppy(on=-1, col=c(rep(\"blue\",6),rep(\"black\",6)))\n# \n# \n# test <- as.xts(merge(AUY,BBands(Cl(AUY))$pctB))\n# test$RSI <- as.xts(RSI(Cl(AUY)))\n# \n# \n# RSI(Cl(AUY))\n",
    "created" : 1424405348808.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1406319153",
    "id" : "B32FC197",
    "lastKnownWriteTime" : 1404692137,
    "path" : "~/GitHub/quantstuff/bbandScanner_Function_v2.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}